// Generated by view binder compiler. Do not edit!
package com.cookandroid.movie.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cookandroid.movie.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout MainView;

  @NonNull
  public final Toolbar appBar;

  @NonNull
  public final Button btnroot;

  @NonNull
  public final Button btnup;

  @NonNull
  public final TextView current;

  @NonNull
  public final ListView filelist;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout MainView,
      @NonNull Toolbar appBar, @NonNull Button btnroot, @NonNull Button btnup,
      @NonNull TextView current, @NonNull ListView filelist) {
    this.rootView = rootView;
    this.MainView = MainView;
    this.appBar = appBar;
    this.btnroot = btnroot;
    this.btnup = btnup;
    this.current = current;
    this.filelist = filelist;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout MainView = (LinearLayout) rootView;

      id = R.id.app_bar;
      Toolbar appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.btnroot;
      Button btnroot = ViewBindings.findChildViewById(rootView, id);
      if (btnroot == null) {
        break missingId;
      }

      id = R.id.btnup;
      Button btnup = ViewBindings.findChildViewById(rootView, id);
      if (btnup == null) {
        break missingId;
      }

      id = R.id.current;
      TextView current = ViewBindings.findChildViewById(rootView, id);
      if (current == null) {
        break missingId;
      }

      id = R.id.filelist;
      ListView filelist = ViewBindings.findChildViewById(rootView, id);
      if (filelist == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, MainView, appBar, btnroot, btnup,
          current, filelist);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
